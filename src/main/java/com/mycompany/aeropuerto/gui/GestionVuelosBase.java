/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.aeropuerto.gui;

import com.mycompany.aeropuerto.dto.Aeropuerto;
import com.mycompany.aeropuerto.dto.CompanyaAerea;
import com.mycompany.aeropuerto.dto.VueloBase;
import static com.mycompany.aeropuerto.logica.LogicaNegocio.escribirCSVvuelosBase;
import static com.mycompany.aeropuerto.logica.LogicaNegocio.leerAeropuertosCSV;
import static com.mycompany.aeropuerto.logica.LogicaNegocio.leerCompanyasCSV;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

/**
 *
 * @author Diego
 */
public class GestionVuelosBase extends javax.swing.JDialog {

    public GestionVuelosBase(java.awt.Frame parent) {
        super(parent);
        initComponents();
    }
    /**
     * Creates new form GestionVuelosBase
     */
    String horasr;
    String ms;
    String hora;
    String x = "0";
    String y = "0";

    public GestionVuelosBase(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargarAeropuertos();
        lblInfo.setVisible(false);

        for (int i = 0; i < 24; i++) {
            if (i < 10) {
                x = "0";
                x = x + i;
                cbxHOSh.addItem(x);
                cbxHOLh.addItem(x);
            } else {
                cbxHOSh.addItem(Integer.toString(i));
                cbxHOLh.addItem(Integer.toString(i));
            }

        }
        for (int i = 0; i < 60; i++) {

            if (i < 10) {
                y = "0";
                y = y + i;
                cbxHOSm.addItem(y);
                cbxHOLm.addItem(y);
            } else {
                cbxHOSm.addItem(Integer.toString(i));
                cbxHOLm.addItem(Integer.toString(i));
            }

        }
    }

    public GestionVuelosBase() {

        initComponents();
        cargarAeropuertos();
        lblInfo.setVisible(false);
        lblVacio.setVisible(false);
        lblErrCodigo.setVisible(false);
        lblErrPlazas.setVisible(false);
        lblErrDiasOpera.setVisible(false);


        for (int i = 0; i < 24; i++) {
            if (i < 10) {
                x = "0";
                x = x + i;
                cbxHOSh.addItem(x);
                cbxHOLh.addItem(x);
            } else {
                cbxHOSh.addItem(Integer.toString(i));
                cbxHOLh.addItem(Integer.toString(i));
            }

        }
        for (int i = 0; i < 60; i++) {

            if (i < 10) {
                y = "0";
                y = y + i;
                cbxHOSm.addItem(y);
                cbxHOLm.addItem(y);
            } else {
                cbxHOSm.addItem(Integer.toString(i));
                cbxHOLm.addItem(Integer.toString(i));
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCodigoVueloBase = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPlazas = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDiasOpera = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnGuardarVB = new javax.swing.JButton();
        cbxHOSh = new javax.swing.JComboBox<>();
        cbxHOSm = new javax.swing.JComboBox<>();
        cbxHOLh = new javax.swing.JComboBox<>();
        cbxHOLm = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        lblHOL = new javax.swing.JLabel();
        lblHOS = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbxAeropuertoOrigen = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        cbxAeropuertoDestino = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnInfoDias = new javax.swing.JButton();
        lblInfo = new javax.swing.JLabel();
        lblErrCodigo = new javax.swing.JLabel();
        lblErrDiasOpera = new javax.swing.JLabel();
        lblVacio = new javax.swing.JLabel();
        lblErrPlazas = new javax.swing.JLabel();
        lblErrAero = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Código:");

        jLabel2.setText("Aeropuerto origen:");

        jLabel3.setText("Aeropuerto destino:");

        jLabel4.setText("Número de plazas:");

        jLabel5.setText("Hora oficial salida:");

        jLabel6.setText("Hora oficial llegada:");

        jLabel7.setText("Días que opera:");

        btnGuardarVB.setBackground(new java.awt.Color(50, 225, 50));
        btnGuardarVB.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnGuardarVB.setText("Guardar");
        btnGuardarVB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarVBActionPerformed(evt);
            }
        });

        cbxHOSh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxHOShActionPerformed(evt);
            }
        });

        cbxHOSm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxHOSmActionPerformed(evt);
            }
        });

        cbxHOLh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxHOLhActionPerformed(evt);
            }
        });

        cbxHOLm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxHOLmActionPerformed(evt);
            }
        });

        lblHOL.setText("00:00");

        lblHOS.setText("00:00");

        jLabel9.setBackground(new java.awt.Color(255, 255, 204));
        jLabel9.setFont(new java.awt.Font("Microsoft YaHei", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("ALTA VUELO BASE");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        cbxAeropuertoOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aeropuertos" }));
        cbxAeropuertoOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAeropuertoOrigenActionPerformed(evt);
            }
        });

        jButton1.setText("Tabla Aeropuertos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cbxAeropuertoDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aeropuertos" }));
        cbxAeropuertoDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAeropuertoDestinoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel10.setText("Hora seleccionada:");

        jLabel11.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel11.setText("Hora seleccionada:");

        btnInfoDias.setText("jButton2");
        btnInfoDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoDiasActionPerformed(evt);
            }
        });

        lblInfo.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        lblInfo.setText("Inf: L -Lunes; M - Martes; X - Miércoles; J - Jueves; V - Viernes; S -Sábado; D - Domingo");

        lblErrCodigo.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        lblErrCodigo.setForeground(new java.awt.Color(255, 0, 0));

        lblErrDiasOpera.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        lblErrDiasOpera.setForeground(new java.awt.Color(255, 0, 0));

        lblVacio.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        lblVacio.setForeground(new java.awt.Color(255, 0, 0));

        lblErrPlazas.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        lblErrPlazas.setForeground(new java.awt.Color(255, 0, 0));

        lblErrAero.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        lblErrAero.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(144, 144, 144)
                            .addComponent(lblVacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnGuardarVB))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnInfoDias, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDiasOpera, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                .addComponent(txtPlazas)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbxHOLh, javax.swing.GroupLayout.Alignment.LEADING, 0, 1, Short.MAX_VALUE)
                                        .addComponent(cbxHOSh, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbxHOSm, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbxHOLm, 0, 1, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblHOL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblHOS, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)))
                                .addComponent(lblErrCodigo)
                                .addComponent(lblErrPlazas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblErrAero)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtCodigoVueloBase, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbxAeropuertoDestino, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbxAeropuertoOrigen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton1))))
                        .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblErrDiasOpera, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel9)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoVueloBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxAeropuertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxAeropuertoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrAero)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPlazas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrPlazas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxHOSh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxHOSm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(lblHOS)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(cbxHOLh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxHOLm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHOL)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiasOpera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(btnInfoDias, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrDiasOpera, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVacio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardarVB))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        lblInfo.getAccessibleContext().setAccessibleParent(btnInfoDias);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static Date getFechaByHora(int horas, int minutos) {
        Calendar cal = Calendar.getInstance();
        cal.set(1970, 1, 1, horas, minutos);
        Date fecha = cal.getTime();
        return fecha;
    }

    public static String getHoraFecha(Date fecha) {
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        return sdf.format(fecha);
    }


    private void btnGuardarVBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarVBActionPerformed
        VueloBase vueloBase = new VueloBase();
        List<CompanyaAerea> lstComp = leerCompanyasCSV();
        boolean codigoComp = false;
        boolean guardar = true;
        for (CompanyaAerea ca : lstComp) {
            if (txtCodigoVueloBase.getText().contains(ca.getCodigo())) {
                codigoComp = true;
            } else {
                codigoComp = false;
            }
        }

        if (!codigoComp) {
            lblErrCodigo.setText("ERROR!! Este código  no encaja con ninguna compañía registrada.");
            lblErrCodigo.setVisible(true);
            guardar = false;
        }

        try {
            if (Integer.parseInt(txtPlazas.getText().toString()) <= 0) {
                lblErrPlazas.setText("ERROR!! Número de plazas no válido.");
                lblErrPlazas.setVisible(true);
                guardar = false;

            }
        } catch (Exception e) {
            lblErrPlazas.setText("ERROR!! Formato introducido no válido.");
            lblErrPlazas.setVisible(true);
            guardar = false;

        }
        //!txtCodigoComp.getText().substring(1).matches("[A-Z][0-9]*")
        if(!txtDiasOpera.getText().matches("[LMXJVSD]*")){
        lblErrDiasOpera.setText("La combinación de días introducida no es válida.");
        lblErrDiasOpera.setVisible(true);
        guardar = false;
        }

        if (cbxAeropuertoOrigen.getSelectedItem().equals(cbxAeropuertoDestino.getSelectedItem()) || cbxAeropuertoDestino.getSelectedItem().equals(cbxAeropuertoOrigen.getSelectedItem())) {
            lblErrAero.setText("Los aeropuertos de origen y destino no pueden ser iguales.");
            guardar = false;

        }
        if (txtCodigoVueloBase.getText().isEmpty() || txtPlazas.getText().isEmpty() || txtDiasOpera.getText().isEmpty() || cbxAeropuertoOrigen.getSelectedItem().equals("Aeropuerto") || cbxAeropuertoDestino.getSelectedItem().equals("Aeropuerto")) {
            lblVacio.setText("ERROR!! No puede haber campos vacíos.");
            lblVacio.setVisible(true);
            guardar = false;

        }

        do {
            try {
                SimpleDateFormat formatoHora = new SimpleDateFormat("HH:mm:ss");
                // DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

                String horaSR = lblHOS.getText();
                String horaLR = lblHOL.getText();

                //esto es lo nuevo 
                int horasSR1 = Integer.parseInt(cbxHOSh.getSelectedItem().toString());
                int minutosMS1 = Integer.parseInt(cbxHOSm.getSelectedItem().toString());
                Date horasalida = getFechaByHora(horasSR1, minutosMS1);

                int horasLR1 = Integer.parseInt(cbxHOLh.getSelectedItem().toString());
                int minutosLR1 = Integer.parseInt(cbxHOLm.getSelectedItem().toString());
                Date horallegada = getFechaByHora(horasLR1, minutosLR1);

                ///esto es lo anterior
                Date horaSRFormateada = formatoHora.parse(horaSR);
                Date horaLRFormateada = formatoHora.parse(horaLR);
                Time timehoraSR = new Time(horaSRFormateada.getTime());
                Time timehoraLR = new Time(horaLRFormateada.getTime());

                vueloBase.setCodigoVuelo((txtCodigoVueloBase.getText()));

                vueloBase.setNumPlazas(Integer.parseInt(txtPlazas.getText()));
                vueloBase.setDiasOpera(txtDiasOpera.getText());
                vueloBase.setHoraOficialSalida(horasalida);
                vueloBase.setHoraOficialLlegada(horallegada);
                vueloBase.setcodigoAeropuertoOrigen((cbxAeropuertoOrigen.getSelectedItem().toString()));
                vueloBase.setAeropuertoDestino(cbxAeropuertoDestino.getSelectedItem().toString());

                

                escribirCSVvuelosBase(vueloBase);

                guardar = false;
            } catch (ParseException ex) {
                System.out.println(ex.getMessage());
                //Logger.getLogger(GestionVuelosDiarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        } while (guardar);
    }//GEN-LAST:event_btnGuardarVBActionPerformed

    private void cbxHOShActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxHOShActionPerformed
        horasr = cbxHOSh.getSelectedItem() != null ? cbxHOSh.getSelectedItem().toString() : "";
        ms = cbxHOSm.getSelectedItem() != null ? cbxHOSm.getSelectedItem().toString() : "";
        hora = horasr + ":" + ms + ":00";
        lblHOS.setText(hora);


    }//GEN-LAST:event_cbxHOShActionPerformed

    private void cbxHOSmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxHOSmActionPerformed
        horasr = cbxHOSh.getSelectedItem() != null ? cbxHOSh.getSelectedItem().toString() : "";
        ms = cbxHOSm.getSelectedItem() != null ? cbxHOSm.getSelectedItem().toString() : "";
        hora = horasr + ":" + ms + ":00";
        lblHOS.setText(hora);


    }//GEN-LAST:event_cbxHOSmActionPerformed

    private void cbxHOLhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxHOLhActionPerformed
        horasr = cbxHOLh.getSelectedItem() != null ? cbxHOLh.getSelectedItem().toString() : "";
        ms = cbxHOLm.getSelectedItem() != null ? cbxHOLm.getSelectedItem().toString() : "";
        hora = horasr + ":" + ms + ":00";
        lblHOL.setText(hora);


    }//GEN-LAST:event_cbxHOLhActionPerformed

    private void cbxHOLmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxHOLmActionPerformed
        horasr = cbxHOLh.getSelectedItem() != null ? cbxHOLh.getSelectedItem().toString() : "";
        ms = cbxHOLm.getSelectedItem() != null ? cbxHOLm.getSelectedItem().toString() : "";
        hora = horasr + ":" + ms + ":00";
        lblHOL.setText(hora);


    }//GEN-LAST:event_cbxHOLmActionPerformed

    private void cbxAeropuertoOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAeropuertoOrigenActionPerformed
        if (!cbxAeropuertoOrigen.getSelectedItem().toString().equals("Aeropuerto de Asturias")) {
            cbxAeropuertoDestino.setSelectedItem("Aeropuerto de Asturias");
        }
    }//GEN-LAST:event_cbxAeropuertoOrigenActionPerformed

    private void cbxAeropuertoDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAeropuertoDestinoActionPerformed
        if (!cbxAeropuertoDestino.getSelectedItem().toString().equals("Aeropuerto de Asturias")) {
            cbxAeropuertoOrigen.setSelectedItem("Aeropuerto de Asturias");
        }
    }//GEN-LAST:event_cbxAeropuertoDestinoActionPerformed

    private void btnInfoDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoDiasActionPerformed
        if (lblInfo.isVisible()) {
            lblInfo.setVisible(false);
        } else {
            lblInfo.setVisible(true);
        }
    }//GEN-LAST:event_btnInfoDiasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TablaAeropuertos tbv = new TablaAeropuertos();
        tbv.setVisible(true);


    }//GEN-LAST:event_jButton1ActionPerformed

    private void cargarAeropuertos() {
        List<Aeropuerto> lstAeropuertos = leerAeropuertosCSV();
        for (Aeropuerto a : lstAeropuertos) {
            cbxAeropuertoOrigen.addItem(a.getNombre());
            cbxAeropuertoDestino.addItem(a.getNombre());

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionVuelosBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionVuelosBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionVuelosBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionVuelosBase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionVuelosBase dialog = new GestionVuelosBase(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardarVB;
    private javax.swing.JButton btnInfoDias;
    private javax.swing.JComboBox<String> cbxAeropuertoDestino;
    private javax.swing.JComboBox<String> cbxAeropuertoOrigen;
    private javax.swing.JComboBox<String> cbxHOLh;
    private javax.swing.JComboBox<String> cbxHOLm;
    private javax.swing.JComboBox<String> cbxHOSh;
    private javax.swing.JComboBox<String> cbxHOSm;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblErrAero;
    private javax.swing.JLabel lblErrCodigo;
    private javax.swing.JLabel lblErrDiasOpera;
    private javax.swing.JLabel lblErrPlazas;
    private javax.swing.JLabel lblHOL;
    private javax.swing.JLabel lblHOS;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblVacio;
    private javax.swing.JTextField txtCodigoVueloBase;
    private javax.swing.JTextField txtDiasOpera;
    private javax.swing.JTextField txtPlazas;
    // End of variables declaration//GEN-END:variables
}
